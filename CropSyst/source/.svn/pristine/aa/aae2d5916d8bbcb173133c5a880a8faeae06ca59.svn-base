#include "crop/phenology_2013.h"
namespace CropSyst
{
//______________________________________________________________________________
Phenology_2013::Phenology_2013
(const Crop_parameters_struct::Phenology &phenology_parameter_
,const float64 &thermal_time_cumulative_ref
,bool  _is_perennial
,bool  _is_fruit_tree
,const CORN::date32 &simdate_raw_
)
: Phenology_abstract(simdate_raw_,_is_perennial,_is_fruit_tree)
, phenology_parameter      (phenology_parameter_)
, thermal_time_cumulative  (thermal_time_cumulative_ref)
{
   for (int i =0 ; i < NGS_COUNT; i++)
   {  days_since_start_of [i] = 0;
      duration_of[i] = 0;
      start_date[i].set_datetime64(0);                                           //140620
      start_day_in_season[i]=65000;                                              //140625
   }
   start_day_in_season_senescence=65000;                                         //160211
   start_day_in_season_senescence_full=65000;                                    //160211
   start_date_tuber_initiation.set_datetime64(0);                                //141217
}
//_Phenology_2013:constructor_______________________________________2018-11-07_/
bool Phenology_2013::start_day()                                   modification_
{
   for (int gs = 0; gs < NGS_COUNT; gs++)
   {  duration_of          [gs] += (growth_stage == gs) ? 1 : 0;
      days_since_start_of  [gs] +=
         (growth_stage == gs)
         || (gs == NGS_SOWING)
         || (growth_stage == NGS_DORMANT_or_INACTIVE)
         || (is_accrescence_initiated()                                          //190101
            //190101 has_emerged()
             && (growth_stage >= gs)) ? 1 : 0;
   }
   season_duration_days++;  // note that PHENOLOGY_2018 increments at the end of the day
   return true; // Phenology_abstract::start_day();
}
//_Phenology_2013::start_day________________________________________2013-09-02_/
bool Phenology_2013::end_day()                             modification_
{
   // we override because 2013 increments season duration at the start of the day
   return Phenology_abstract::end_day();
}
//_Phenology_2013::end_day__________________________________________2013-09-02_/
bool Phenology_2013::start_season()                                modification_
{  growth_stage             = NGS_RESTART;
   harvest_DOY              = 0;
   days_since_start_of[NGS_EMERGENCE] = 0;                                       //110531 110506
   return Phenology_abstract::start_season();                                      //110506
}
//_Phenology_2013::start_season_____________________________________2013-09-02_/
bool Phenology_2013::is_in_germination()                            affirmation_
{  return growth_stage == NGS_GERMINATION;
}
//_Phenology_2013::is_in_germination________________________________2018-11-07_/
bool Phenology_2013::has_emerged()                             affirmation_ //101030 was is_in_season
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //120820
   return growth_stage >= NGS_ACTIVE_GROWTH
       && growth_stage < NGS_DORMANT_or_INACTIVE;
}
//______________________________________________________________________________
bool Phenology_2013::is_in_accrescence()                            affirmation_
//181107 was is_in_vegetative_growth
{  float64 start_growth_deg_day
      = is_fruit_tree ? 0.0 : phenology_parameter.initiation.emergence;
   bool TT_inrange = ( (thermal_time_cumulative >= start_growth_deg_day)
     && (thermal_time_cumulative <= phenology_parameter.culmination.accrescence));

   return (growth_stage == NGS_ACTIVE_GROWTH) ||                                 //110422
      TT_inrange
      ;
}
//_2013-09-02___________________________________________________________________
bool Phenology_2013::is_flowering()                            affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //130903
   return growth_stage == NGS_ANTHESIS;
}
//_is_flowering________________________________________________________________/
bool Phenology_2013::is_in_anthesis()                            affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //130903
   return growth_stage == NGS_ANTHESIS;
}
//_is_in_anthesis______________________________________________________________/
bool Phenology_2013::is_in_tuberization()                           affirmation_
{  return start_date_tuber_initiation.get_date32() > 0                           //170525
      &&  !days_since_start_of[NGS_FILLING];
}
//_Phenology_2013::is_in_tuber_initiation___________________________2015-08-25_/
bool Phenology_2013::is_in_yield_formation()                        affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //120820
   return growth_stage == NGS_BULK_FILLING;
}
//______________________________________________________________________________
bool Phenology_2013::is_in_culminescence()                          affirmation_
{  return thermal_time_cumulative > phenology_parameter.culmination.accrescence;
}
//_Phenology_2013::is_in_culminescence______________________________2018-11-09_/
bool Phenology_2013::is_in_senescence()                             affirmation_
{   return
      ((thermal_time_cumulative >= phenology_parameter.initiation.senescence)
     &&(thermal_time_cumulative <= phenology_parameter.culmination.senescence));
}
//______________________________________________________________________________
bool Phenology_2013::is_maturity_first_day()                         affirmation_
{  return get_days_since_start_of(NGS_MATURITY) == 1;
}
//_Phenology_2013::is_maturity_first_day()__________________________2018-11-09_/
bool Phenology_2013::is_maturing()                                  affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //120820
   return growth_stage == NGS_MATURITY;
}
//_Phenology_2013::is_maturing()_______________________________________________/
bool Phenology_2013::has_matured_new()                              affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //130903
   return (growth_stage >= NGS_MATURITY);
   //181108 || ((growth_stage >= NGS_HARVESTABLE)
//181108         #if (CS_VERSION != 4)
//181108          && (growth_stage <= NGS_POSTHARVEST)
//181108          #endif
//   );
}
//______________________________________________________________________________
bool Phenology_2013::is_harvested()                                 affirmation_
{  return get_days_since_start_of(NGS_HARVEST) > 0;
}
//_is_harvested_____________________________________________________2017-08-20_/
bool Phenology_2013::is_in_quiescence()                             affirmation_
{  return growth_stage == NGS_DORMANT_or_INACTIVE;
}
//_is_in_quiescence_________________________________________________2018-11-09_/
bool Phenology_2013::is_dormant()                                   affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //130903
   return growth_stage == NGS_DORMANT_or_INACTIVE;
}
//_is_dormant_____________________________________________________________________________
bool Phenology_2013::is_in_growth_period()                          affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //130903
   return ((growth_stage >= NGS_GERMINATION)
         &&(growth_stage < NGS_HARVESTABLE));                                    //130902_970313
}
//______________________________________________________________________________
bool Phenology_2013::is_in_growing_season()                         affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //130903
   bool in_season = (growth_stage >= NGS_GERMINATION) && (growth_stage < NGS_DORMANT_or_INACTIVE);  //130902_040608
   if ((growth_stage == NGS_HARVEST)                                             //130902_040608
             //         && (!biomass_fate_today)   // there is a condition that we dont wan't to return true if we still have biomatter fate to dispose
           )    // Indicates in season harvest today.
       in_season = true; // special case for clipping harvest which may occur during growing season //040608
   return in_season;
}
//______________________________________________________________________________
bool Phenology_2013::is_early
(Normal_crop_event_sequence growth_stage
,nat16 days)                                                        affirmation_
{  nat16 days_since_start_of_stage = get_days_since_start_of(growth_stage);
   return days_since_start_of_stage && ( days_since_start_of_stage <= days);
}
//_Phenology_2013::is_early_________________________________________2018-11-08_/
bool Phenology_2013::reset
(Normal_crop_event_sequence from
,Normal_crop_event_sequence to)                                    modification_
{
   for (int i = from ; i <= to; i++)                                             //141202
   {
      days_since_start_of  [i] = 0;
      duration_of          [i] = 0;
      start_day_in_season  [i]=65000;                                            //140625
      start_date           [i].clear();                                          //180822_141202
   }
   // NYI senescence
   // and senescence_full
   return Phenology_abstract::reset(from,to);
}
//_Phenology_2013:reset_____________________________________________2018-11-07_/
bool Phenology_2013::activate_sowing()
{  start_date[NGS_PLANTING].set_date32(simdate_raw);                             //141202_001115
   start_date[NGS_RESTART] .set_date32(simdate_raw);                             //141202_130114
   return true;
}
//_Phenology_2013::activate_sowing__________________________________2018-11-08_/
bool Phenology_2013::activate_emergence()
{  growth_stage = NGS_ACTIVE_GROWTH;
   start_date[NGS_EMERGENCE].set_date32(simdate_raw); //set(today);
   return true;
}
//_Phenology_2013::activate_emergence_______________________________2018-11-08_/
bool Phenology_2013::activate_accrescence()
{  growth_stage = NGS_ACTIVE_GROWTH;
   return true;
}
//_Phenology_2013::activate_emergence_______________________________2018-11-08_/
bool Phenology_2013::activate_tuberization()
{  start_date_tuber_initiation.set_date32(simdate_raw);
   return true;
}
//_Phenology_2013::activate_tuber_initiation________________________2018-11-08_/
bool Phenology_2013::activate_anthesis()
{  start_day_in_season[NGS_ANTHESIS] = season_duration_days;
   start_date[NGS_ANTHESIS].set_date32(simdate_raw);
   return true;
}
//_Phenology_2013::activate_anthesis________________________________2018-11-08_/
bool Phenology_2013::activate_yield_formation()
{  growth_stage = NGS_FILLING;
   start_date[NGS_FILLING].set_date32(simdate_raw);
   return true;
}
//_Phenology_2013::activate_filling_________________________________2018-11-08_/
bool Phenology_2013::activate_maturity()
{  growth_stage = NGS_MATURITY;
   start_date[NGS_MATURITY].set_date32(simdate_raw);
   return true;
}
//_Phenology_2013::activate_maturity________________________________2018-11-08_/
bool Phenology_2013::activate_quiescence
()
//190424 (bool apply_dormancy)
{  start_date[NGS_DORMANT_or_INACTIVE].set_date32(simdate_raw);
   growth_stage = NGS_DORMANT_or_INACTIVE; //080321  This may need to be INACTIVE_PERIOD    //970219
   return true;
}
//_Phenology_2013::activate_quiescence______________________________2018-11-08_/
bool Phenology_2013::activate_restart()
{  start_date[NGS_RESTART].set_date32(simdate_raw);
   return true;
}
//_Phenology_2013::activate_restart_________________________________2018-11-08_/
bool Phenology_2013::activate_harvestable()
{  growth_stage = NGS_HARVESTABLE;
   return true;
}
//_Phenology_2013::activate_harvestable_____________________________2018-11-08_/
bool Phenology_2013::activate_harvest()
{  growth_stage =NGS_HARVEST;
   return true;
}
//_Phenology_2013::activate_harvest_________________________________2018-11-08_/
nat16 Phenology_2013::get_season_duration_days()                           const
{  return get_days_since_start_of(NGS_PLANTING);
}
//_2018-11-11__________________________________________________________________/

/*181108
bool Phenology_2013::has_matured_obsolete()                         affirmation_
{  Normal_crop_event_sequence growth_stage = get_growth_stage_sequence();        //130903
   return (growth_stage == NGS_MATURITY) || ((growth_stage >= NGS_HARVESTABLE)
         #if (CS_VERSION != 4)
          && (growth_stage <= NGS_POSTHARVEST)
          #endif
   );
}
*/
//______________________________________________________________________________
//______________________________________________________________________________
} //namespace CropSyst
