#include "collate_engine.h"
#include "corn/OS/file_system_engine.h"
#include "corn/data_source/vv_file.h"
#if (COLLATOR_VERSION==2014)
#include "output_collator_2014.h"
#else
#include "output_collator_2019.h"
#endif
namespace UED
{
//______________________________________________________________________________
Collate_engine::Collate_engine
(Arguments_collator &arguments_)
:  arguments(arguments_)
{}
//_Collate_engine:constructor__________________________________________________/
bool Collate_engine::process()
{
   if (arguments.is_verbose(2)) //discovery
   {
   std::string UED_names_buffer;arguments.UED_names.string_items(UED_names_buffer,' ');
   std::clog <<  "collate output:"<< UED_names_buffer<< std::endl;
   }
   if (arguments.is_verbose(2)) //inclusion/selection
   {
   std::string level_captions_buffer;arguments.level_captions.string_items(level_captions_buffer,' ') ;
   std::clog << "levels=" << level_captions_buffer << std::endl;
   }
   nat32 total_detail_lines = 0;
   FOR_EACH_IN(UED_name, CORN::Item_wstring, arguments.UED_names, each_UED )
   {
      if (arguments.is_verbose(1)) //progression
      {
         std::string UED_name_string; CORN::wstring_to_string((*UED_name),UED_name_string);
         std::clog << "collating:" <<  UED_name_string << std::endl;
      }
      total_detail_lines += process_UED(*UED_name);
   } FOR_EACH_END(each_UED)
   return total_detail_lines > 0;
}
//_process__________________________________________________________2014-09-03_/
nat32 Collate_engine::process_UED(const std::wstring &UED_name)                  //180119
{
   #if (COLLATOR_VERSION==2014)
   Output_collator_2014
   #else
   Output_collator_2019
   #endif
    collator
      (arguments,UED_name                                                        //160526_170328
      ,arguments.level_captions,arguments.exclude_directories);
   // The variable definition array is instanciated here because it needs
   // to be the same for each set of UED files processed.
   collator.initialize();
   CORN::Text_list parent_level_names;
   nat32 UED_detail_lines = collator.collate_level
      (arguments.start_directory                                                 //170328
      ,0,parent_level_names,true);
   /*lines_written += */collator.commit_postamble();                             //190107
   CORN::OS::File_name_concrete format_filename
         #if (COLLATOR_VERSION==2014)
         (collator.
            //convertor->                                                          //191001
            parameters.format_filename);                                         //160606
         #else
         (arguments.target.format_filename);                                     //191007_190105
         // probably works for all version, I just haven't checked yet
         #endif

   if (CORN::OS::file_system_engine.exists(format_filename))
   {
      std::clog << "info: "
      << "Format already exists it will not be overwritten" << std::endl
      << format_filename.c_str()                                                 //190105
         //190105 parameters.format_filename.c_str()
         << std::endl;
   }
   else
   {  // No TDF file was specified on the command line
      // so by default the default format (R) is used
      // and columns are derived from variables available in the
      // UED file.
      // We write out the format created and used to the CWD
      // so the user can identify the columns and units.
      CORN::OS::Directory_name_concrete CWD;
      CORN::OS::File_name_concrete TDF_filename_generated(CWD,UED_name,L"TDF");
      CORN::VV_File TDF_file(TDF_filename_generated.c_str());

      /*191007 I think this may be obsolete
      collator.
         arguments.target                                                        //191007
         //191007 format
         .columns_1based.set_write_delimiter(0);                                 //160601
      */

      // NYI clear column start_number if it was generated                       //190108


      TDF_file.set(collator.Output_collator_abstract::arguments);                                          //161201
      //191007 TDF_file.set(collator.format);                                    //161201
   }
   return UED_detail_lines;
}
//_process_UED______________________________________________________2014-10-17_/
}//_namespace_UED______________________________________________________________/

